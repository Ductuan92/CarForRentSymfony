a:6:{s:9:"classesIn";a:1:{s:36:"App\Controller\Api\CarsApiController";a:6:{s:4:"name";s:17:"CarsApiController";s:14:"namespacedName";s:36:"App\Controller\Api\CarsApiController";s:9:"namespace";s:18:"App\Controller\Api";s:9:"startLine";i:22;s:7:"endLine";i:108;s:7:"methods";a:6:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:80:"__construct(Symfony\Component\Validator\Validator\ValidatorInterface $validator)";s:10:"visibility";s:6:"public";s:9:"startLine";i:31;s:7:"endLine";i:34;s:3:"ccn";i:1;}s:6:"addCar";a:6:{s:10:"methodName";s:6:"addCar";s:9:"signature";s:221:"addCar(Symfony\Component\HttpFoundation\Request $request, App\Service\CarsService $carService, App\Repository\UserRepository $userRepository, App\Request\CarsRequest $carRequest): Symfony\Component\HttpFoundation\Response";s:10:"visibility";s:6:"public";s:9:"startLine";i:36;s:7:"endLine";i:51;s:3:"ccn";i:1;}s:8:"listCars";a:6:{s:10:"methodName";s:8:"listCars";s:9:"signature";s:227:"listCars(App\Request\CarsRequest $carRequest, App\Transformer\CarsTransformer $carsTransformer, App\Service\CarsService $carsService, Symfony\Component\HttpFoundation\Request $request): Symfony\Component\HttpFoundation\Response";s:10:"visibility";s:6:"public";s:9:"startLine";i:54;s:7:"endLine";i:66;s:3:"ccn";i:1;}s:10:"updateCars";a:6:{s:10:"methodName";s:10:"updateCars";s:9:"signature";s:331:"updateCars(App\Entity\Cars $cars, App\Transformer\CarsTransformer $carsTransformer, App\Repository\CarsRepository $carsRepository, Symfony\Component\HttpFoundation\Request $request, App\Request\CarsRequest $carsRequest, Symfony\Component\Validator\Validator\ValidatorInterface $validator): Symfony\Component\HttpFoundation\Response";s:10:"visibility";s:6:"public";s:9:"startLine";i:69;s:7:"endLine";i:84;s:3:"ccn";i:1;}s:10:"deleteCars";a:6:{s:10:"methodName";s:10:"deleteCars";s:9:"signature";s:123:"deleteCars(App\Repository\CarsRepository $carsRepository, App\Entity\Cars $cars): Symfony\Component\HttpFoundation\Response";s:10:"visibility";s:6:"public";s:9:"startLine";i:90;s:7:"endLine";i:99;s:3:"ccn";i:2;}s:8:"validate";a:6:{s:10:"methodName";s:8:"validate";s:9:"signature";s:14:"validate($car)";s:10:"visibility";s:7:"private";s:9:"startLine";i:101;s:7:"endLine";i:107;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:109;s:18:"commentLinesOfCode";i:6;s:21:"nonCommentLinesOfCode";i:103;}s:15:"ignoredLinesFor";a:1:{i:0;i:22;}s:17:"executableLinesIn";a:24:{i:0;i:33;i:1;i:43;i:2;i:44;i:3;i:45;i:4;i:46;i:5;i:47;i:6;i:48;i:7;i:50;i:8;i:61;i:9;i:62;i:10;i:63;i:11;i:65;i:12;i:78;i:13;i:79;i:14;i:80;i:15;i:81;i:16;i:83;i:17;i:93;i:18;i:94;i:19;i:96;i:20;i:98;i:21;i:103;i:22;i:104;i:23;i:105;}}